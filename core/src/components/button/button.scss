@use "../../css/theming/color";

:host {
  display: inline-block;
  --background: #{color.useVar(accent)};
  --contrast: #{color.useVar(accent, contrast)};
}

.button {
  box-sizing: border-box;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  border: none;
  border-radius: 20px;
  background: none;
  height: 40px;
  min-width: 120px;
  cursor: pointer;
  font: inherit;
  font-size: 1rem;
  text-decoration: none;
  white-space: nowrap;
}
:host(.uni-disabled) .button {
  cursor: not-allowed;
  opacity: 0.7;
}

.prepend-icon {
  margin-right: 10px;
}

// Loading State
:host(.uni-loading) {
  .button-content, .prepend-icon {
    opacity: 0.5;
  }
  .button {
    background-image: linear-gradient(90deg, transparent 25%, rgba(255, 255, 255, 0.5) 37.5%, transparent 50%);
    background-size: 400% 400%;
    animation: uni-loading-pill 1.5s infinite linear;
  }
}

// Border style (except loading)
:host(.uni-style-border:not(.uni-loading)) .button {
  border: 2px solid var(--background);
  transition: background-color 0.3s, color 0.3s;
  color: var(--background);
}
// Border style hover (except disabled)
:host(.uni-style-border:not(.uni-disabled):hover) .button, :host(.uni-style-border:not(.uni-disabled)) .button:focus {
  color: var(--contrast);
  background-color: var(--background);
}

// Solid style, or loading style
:host(.uni-style-solid), :host(.uni-loading) {
  .button {
    background-color: var(--background);
    transition: filter 0.3s;
    color: var(--contrast);
  }
}

// Solid style hover, not disabled
:host(.uni-style-solid:not(.uni-disabled)) {
  .button:hover, .button:focus {
    filter: brightness(90%);
  }
}

@keyframes uni-loading-pill {
  from {
    background-position-x: 75%;
  }
  to {
    background-position-x: 0;
  }
}
